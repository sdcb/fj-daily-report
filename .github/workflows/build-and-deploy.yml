name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04
    outputs:
      full_ver: ${{ steps.get_version.outputs.full_ver }}
      patch_full_ver: ${{ steps.get_version.outputs.patch_full_ver }}
      minor_full_ver: ${{ steps.get_version.outputs.minor_full_ver }}
      major_ver: ${{ steps.get_version.outputs.major_ver }}
      msbuild_args: ${{ steps.get_version.outputs.msbuild_args }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 缓存前端 node_modules
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ./frontend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # 安装前端依赖
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      # 构建前端
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # 将前端构建产物复制到后端wwwroot目录
      - name: Copy frontend build to backend
        run: |
          mkdir -p ./backend/wwwroot
          cp -r ./frontend/out/* ./backend/wwwroot/ || cp -r ./frontend/.next/standalone/* ./backend/wwwroot/ || cp -r ./frontend/dist/* ./backend/wwwroot/ || echo "Frontend build output not found in expected locations"
          ls -la ./backend/wwwroot

      # 获取版本信息
      - name: Get version
        id: get_version
        run: |
          cd ./backend
          # 从项目文件获取版本，如果没有则使用默认值
          ver=$(grep -oPm1 "(?<=<Version>)[^<]+" FjDailyReport.csproj || echo "1.0.0")
          minor_ver=$(echo $ver | cut -d '.' -f 1-2)
          major_ver=$(echo $ver | cut -d '.' -f 1)
          full_ver=${ver}.${{ github.run_number }}
          
          echo "full_ver=${full_ver}" >> $GITHUB_OUTPUT
          echo "patch_full_ver=${ver}" >> $GITHUB_OUTPUT
          echo "minor_full_ver=${minor_ver}" >> $GITHUB_OUTPUT
          echo "major_ver=${major_ver}" >> $GITHUB_OUTPUT
          echo "msbuild_args=/p:Version=${full_ver} /p:AssemblyVersion=${full_ver} /p:FileVersion=${full_ver} /p:InformationalVersion=${full_ver}" >> $GITHUB_OUTPUT

      # 登录 GitHub Container Registry
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # 使用 .NET PublishContainer 构建并推送 Docker 镜像
      - name: Build and push Docker container
        run: |
          dotnet publish ./backend/FjDailyReport.csproj -c Release --os linux --arch x64 /t:PublishContainer /p:ContainerRepository=ghcr.io/${{ github.repository_owner }}/fj-daily-report ${{ steps.get_version.outputs.msbuild_args }}

      # 标记并推送多个版本标签
      - name: Tag and push multiple versions
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/fj-daily-report:latest ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.full_ver }}
          docker tag ghcr.io/${{ github.repository_owner }}/fj-daily-report:latest ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.patch_full_ver }}
          docker tag ghcr.io/${{ github.repository_owner }}/fj-daily-report:latest ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.minor_full_ver }}
          docker tag ghcr.io/${{ github.repository_owner }}/fj-daily-report:latest ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.major_ver }}
          
          docker push ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.full_ver }}
          docker push ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.patch_full_ver }}
          docker push ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.minor_full_ver }}
          docker push ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.major_ver }}
          docker push ghcr.io/${{ github.repository_owner }}/fj-daily-report:latest

      # 输出部署信息
      - name: Output deployment info
        run: |
          echo "🎉 部署完成！"
          echo "Docker 镜像已推送到 GitHub Container Registry："
          echo "  - ghcr.io/${{ github.repository_owner }}/fj-daily-report:latest"
          echo "  - ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.full_ver }}"
          echo "  - ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.patch_full_ver }}"
          echo "  - ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.minor_full_ver }}"
          echo "  - ghcr.io/${{ github.repository_owner }}/fj-daily-report:${{ steps.get_version.outputs.major_ver }}"